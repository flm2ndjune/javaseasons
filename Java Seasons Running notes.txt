****************************************
Java Season - 1
****************************************
--------------------------------------------------
Day 1 : 7th July  - Monday
--------------------------------------------------

Features of Java : 

1) Simple 
2) OO Object Oriented Programming 
3) Robust (Strong) 
4) Secured 
5) Platform Indepedent
6) Architectural Neutral 
7) Portable 

---------------------------------
jdk download and installation
---------------------------------

Download :


https://www.oracle.com/java/technologies/downloads/

JAVA 8 / 11 / 17 , now prefer 17 

download jdk-17.0.15_windows-x64_bin.exe

https://signon.oracle.com/signin


create an account 

https://profile.oracle.com/myprofile/account/create-account.jspx


Install ???

just double clik on .exe file 

click next -> next -> close 


how to check java is installed ?

In below location 

C:\Program Files\Java\jdk-17 

if you find files like bin , conf , lib etc .. that means java is installed 



--------------------------------------------------
Day 2 : 8th July  - Tuesday
--------------------------------------------------

After Installation 

go to Environment Variables --> under "System Variables" section --> select "path"
and click on edit 

Now remove the first option "C:\Program Files\Common Files\Oracle\Java\javapath"

by using "Delete" button then click "Ok" and click "Ok" and click "Ok"



*****************
how to configure 
java / jdk 
*****************

what do you mean by configuration ?

configuration means telling OS where any software is present

Step 1: 
go to Environment Variables --> "Under user variables for accoutname" 
click on "New" --> 

Variable Name : JAVA_HOME
Variable Value : C:\Program Files\Java\jdk-17

Then click "Ok"

Step 2:
Under System  variables --> Select path and click on "Edit"
--> click on "New" --> path the jdk path till bin folder

Click ok --> Click ok --> Click ok

???????????????????
how to check
java is configured ?
????????????????????

go to cmd : 

C:\Users\Riyaz>java -version
java version "17.0.15" 2025-04-15 LTS
Java(TM) SE Runtime Environment (build 17.0.15+9-LTS-241)
Java HotSpot(TM) 64-Bit Server VM (build 17.0.15+9-LTS-241, mixed mode, sharing)


-----------------------------------
JDK folders
-----------------------------------

										jdk
							
							
							
				lib 				bin	/tools				jre(now-a-days) / jmods 
				
				
lib : library  / predefined stuff --> APIs (.jar) 
									   |
								Collections of packages 
									   |
								------------------
								|                  |
							Classes				Interfaces
							   |					|
					Variables    Methods 	  Fields		Abstract Methods 
											Constants

bin : binaries (executables) 	

javac :  it will compile a java file and create a .class file  (this is Byte Code)

javac filename.java 

java : this will exucte a .class file 

java filename 

-------------------------------------
JRE (Java Runtime Environment ) 

- pre execution of code is done here
- collection of info about your current working machine 
- .class file (Byte Code) to local understandable format 
- implementation of tasks for JVM 


												JVM (Java Virtual Machine) - Abstract machine 
												 
												 |
												 
						CLSS				EE						GC 
						Class Loader		Execution				Garbage
						Subsystem			Engine					Collector
												|
								Interpreter          JIT Compiler
								                     (Just In time) 
--------------------------------------------------
Day 3 : 9th July  - Wednesday 
--------------------------------------------------													 
													 

CLSS : Class Loader Subsystem 

-> Loading .class files or code 

-> Linking  

-> Intialization 

EE: Execution Engine 
			 Byte Code -> Machine Understandable format 
Interpreter : BC -> .exe 
JIT Compiler : Just In time Compiler (looping )
 
 GC :Garbage collector 
 
 Mark  : identify 
 Sweep : cleans or deallocate 
 
 System.gc();
 Runtime.gc();

=============================================
JAVA MEMORY BLOCKS
=============================================
1) Class Area / Method Area 
- .class file (Program)
- static variables
- static methods 
- static blocks

2) Heap Area (Dynamic Memory allocation)

- objects 
- Arrays 


3) Java Stack Area 

- Local declaration or Local Variables
- Expressions 
- current running logic / code (loops)

4) String Constant Pool Area (SCPA)
only String Literals 
     String str="FLM";

============================================
Structure of Java Program
============================================
i) Documentation Section
ii) package Section
iii) import section
iv) Class or Interface Section 


i) Documentation Section

Documentation is also called as Comments sections 

2 types of comments 

1) Single line comment // 
2) Multiline comment  
/*
kjhkjhkjh
yttuytuyt
mnvnvnbvbn
*/

ii) package Section -> meant for logical grouping 

package means folder 

syntax :

package packagename;

package section or statement will be the first statement in program 

multilevel package

package packagename1.packagename2;

iii) import section

import packagename.*;   //not prefered 

import packagename.className; //more readable and prefered 

java.lang is default package, no need to include import statement 

--------------------------------------------------
Day 4 : 10th July  - Thursday 
--------------------------------------------------

iv) Class or Interface Section 	

syntax : 

access-specifier access-modifier class ClassName 
{
// variables
// methods 


}

access-specifier/access-label / scope label : public / private / protected / <default> or unspecified 
											 
access-modifier : it tells behaviour

static / final / abstarct / transient / volatile / <default> or unspecified 

											
main method : 

access-specifier  access-modifier  return-type   methodname 
public            static            void         main(String[] args)
{

}


D:\FLM2ndJune>java Hello
Error: Main method not found in class Hello, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

----------------------------------------
Naming Conventions in Java
----------------------------------------

							Collections of packages 
									   |
								------------------
								|                  |
							Classes				Interfaces
							   |					|
					Variables    Methods 	  Fields		Abstract Methods 
											Constants
						
									   

packages : 

all lower case 

e.g 

java.util
java.io
org.openqa.selenium
regression 


Classes and Interfaces :  TitleCase  (e.g RamaKrishna)

Hello 

Sample 

Scanner 

GetPropertyAction

WebDriver


Variables and methods / Abstract Methods : CamelCase 

x
theProp
defaultVal

costOfItem

println(
nextInt(

Fields / constants : All Upper Case 

PI=3.14;

MAX_WITHDRAW_LIMIT=10000;
			
--------------------------------------------------
Day 5: 10th July  - Friday 
--------------------------------------------------
IDE : Integrated Development Environment 

Eclipse / IntelliJ Indea / VScode / Netbeans etc ..

Eclipse : 

-------------------------------
Download and Installation
-------------------------------

https://www.eclipse.org/downloads/

click on "Download Packages"

you will see latest version "Eclipse IDE 2025-06 R Packages" ==> but don't download this 

try to download 2024-03  , this is stable for Java 17 and Selenium >= 4.20

in right hand side you will find "More Downloads",under that you can find "Eclipse 2024-03 (4.31)"

just click on "Eclipse 2024-03 (4.31)"

unde "Eclipse IDE for Enterprise Java and Web Developers"  click on "Windows | x86_64"

you will a zip file getting downloaded 

then unzip it 

the inside "eclipse" folder you will see "eclipse" application means .exe file

just double click it 

"C:\Users\Riyaz\eclipse-workspace"

????????????????????????????????????????????????
Assignment - 1
????????????????????????????????????????????????
Complete Eclipse Installation
create a Java Project 
and send screenshot to below email id 
flmtechteam.testing@gmail.com
??????????????????????????????????????????????????


=================================================
Variables in JAVA
==================================================

-> reference given to a memory block 

-> usage of variable : to store / hold a value , for re-use 

-> simplifies the expressions 
-> to store and recall anywhere in program

syntax : 

access-specifier access-modifier data-type variableName = value ;  declaration and assignment 

access-specifier access-modifier data-type variableName; declaration


SrikanthSoma - title case - pascal case 

srikanthKumarSoma - camel case 


--------------------------------------------------
Day 6: 14th July  - Monday 
--------------------------------------------------

										Variables
										
										
				Local 						Instance 						Static 


1. Def ?
2. when memory is getting allocated ?
3. where memory is allocated ?
4. what is the calling style ?
5. what is the scope or life time ?

				
Local Variable : 


1. Def ?
A variable which is declared inside a method 	

2. when memory is getting allocated ?
Ans : when the method is called or refered 


3. where memory is allocated ?
Ans : Java Stack Area 

4. what is the calling style ?
Ans : Variable name itself

5. what is the scope or life time ?
Ans : till the end of method 

Note : It's the duty of developer/programmer to initialize local variables

The local variable x may not have been initialized


Instance Variables : 

									
1. Def ?
Ans : A variable which is declared inside a class but outside of method


2. when memory is getting allocated ?
Ans : only when you create an instance or object to that class 
syntax to create object : 
ClassName objectName=new ClassName(); 

3. where memory is allocated ?
Ans : Heap Area 


4. what is the calling style ?
Ans : objectName.variableName;

5. what is the scope or life time ?
Ans: till the last usage of object in program

Static Variables:

1. Def ?
ans : A variable which is declared inside a class but outside of method having keyword

2. when memory is getting allocated ?
Ans : during .class file loading 


3. where memory is allocated ?
Ans : CLass Area /Method Area 

4. what is the calling style ?
Ans : ClassName.variableName


5. what is the scope or life time ?
Ans : till the end of program 

Note : when to choose static 
if you have some value that is common and can be shared across 

--------------------------------------------------
Day 7: 16th July  - Wednesday 
--------------------------------------------------


====================================
Data Types in Java 
====================================

									
i=10 ==> Not a typed lang (e.g Python , REXX etc ..)

int i=10; ==> Strongly typed language (e.g Java)

										Datatypes
							
							
				primitive datatypes(8)					non-primitive datatypes (referenced or user defined)

		
		boolean 			Numeric 							Strings ,Arrays , Object etc ..
		
						char		Integral
						
						
								integer			floating point
		---------------------------------------------------------------						
								
		boolean			char 	byte short int long 	float    double			
										
										
										
Type mismatch: cannot convert from int to byte

Type mismatch: cannot convert from int to short

The literal 2147483648 of type int is out of range








